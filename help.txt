1. tsc (only compile!!!)

tsc -init

  "module": "es6",//commonjs",
  "outDir": "./dist",

v body
  <script src="dist/index.js" type="module"></script>

tsc

start: f12
index.html  (tsc only compile) + (.js/or no) + (body:type=module) + (module es6, outdir ./dist)
------------------------
grunt

npm install typescript --save-dev
npm install grunt --save-dev
npm install grunt-cli -g

npm install grunt-ts
Gruntfile.js создан

grunt запуск
index.html запуск из корневой папки с dist/index.js работает
--------------
requireJs
    "module": "amd",
     "outDir": "./dist",  //  не изменилось-//-

    npm install requirejs --save-dev
    npm install grunt-contrib-copy --save-dev
    npm install grunt-contrib-clean --save-dev

Gruntfile.js изменен + copy & clean plugins
 запуск уже из /dist/index.js

 (grunt) + (.js/or no) + (head-require) + (module amd, outdir ./dist) + start from /dist/index.html

 ! аналогично можно с commonjs (тут с amd)

 !!! работает и без расширений в импорте!
------------------------
systemjs

npm install systemjs --save-dev
    "module": "system",//amd commonjs

   Gruntfile.js изменен //исп system, а не блок с  require
(grunt) + (only with .js!!!) + (systemjs in body) + (module system, outdir ./dist) + start from /dist/index.html

на этом этапе не работает убирание расширения при импорте!
---все в 1 файл
     "outFile": "./dist/index.js",                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
//     "outDir": "./dist",

grunt --force

=========
gulp
npm install --global gulp-cli
npm install gulp@4
npm install gulp-typescript typescript

gulpfile.js из примера начало

настройка копирования через pipe

var gulp = require('gulp');
var ts = require('gulp-typescript');

(gulp) + (no work!) + (systemjs in body) + (module system, outdir ./dist) + start from /dist/index.html